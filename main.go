package main

import (
	"flag"
	"github.com/Wastack/adventure/controller"
	"github.com/Wastack/adventure/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/Wastack/adventure/engine"
	"github.com/Wastack/adventure/engine/data/yaml"
	"github.com/gin-gonic/gin"
	"github.com/swaggo/files"
	"github.com/swaggo/gin-swagger"
	"io/ioutil"
	"log"
	"os"
)

func parse(file_path string) (engine.GameDataI, error) {
	file, err := os.Open(file_path)
	if err != nil {
		return nil, err
	}
	b, err := ioutil.ReadAll(file)
	if err != nil {
		return nil, err
	}
	return yaml.Parse_yaml(b)
}

func parse_clo() (with_api bool, port string, yaml_path string) {
	portPtr := flag.String("port", "8080", "API port")
	withApiPtr := flag.Bool("with-api", true, "whether API should be served")
	flag.Parse()
	if portPtr != nil {
		port = *portPtr
	}
	if withApiPtr != nil {
		with_api = *withApiPtr
	}
	args := flag.Args()
	if len(args) < 1 {
		log.Fatalf("Missing yaml file path as first argument\n")
	}
	yaml_path = args[0]
	return
}

func main() {
	with_api, port, file_path := parse_clo()
	game_data, err := parse(file_path)
	if err != nil {
		log.Fatalf("Error while parsing yaml file: %v", err)
	}

	if with_api {
		// programatically set swagger info
		docs.SwaggerInfo.Title = "Swagger Adventure API"
		docs.SwaggerInfo.Description = "This is a server for the adventure game engine."
		docs.SwaggerInfo.Version = "0.0"
		docs.SwaggerInfo.Host = "192.168.0.27:" + port
		docs.SwaggerInfo.BasePath = "/"
		r := gin.New()

		c := controller.NewController(game_data)

		// Create API for engine
		adventure := r.Group("/adventure")
		{
			adventure.GET("/first", c.ShowFirstState)
			adventure.GET("", c.NextState)
		}

		// use ginSwagger middleware to serve the API docs
		r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
		r.Run(":" + port)
	}
}
